{
  "stats": {
    "suites": 0,
    "tests": 0,
    "passes": 0,
    "pending": 0,
    "failures": 0,
    "start": "2021-04-05T01:38:55.466Z",
    "end": "2021-04-05T01:38:57.484Z",
    "duration": 2018,
    "testsRegistered": 8,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 1,
    "hasOther": true,
    "skipped": 8,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "e85fb20c-bff2-4ca1-8139-182e96ce7875",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": true,
          "duration": 2012,
          "state": "failed",
          "speed": null,
          "pass": false,
          "fail": true,
          "pending": false,
          "context": null,
          "code": "let ANZarr = await getProducts.getProductsArray(\"ANZ\", 1);\nconsole.log(ANZarr)\nANZId = ANZarr[0].productId;\nlet CBAarr = await getProducts.getProductsArray(\"CBA\", 1);\nCBAId = CBAarr[0].productId;\nlet NABArr = await getProducts.getProductsArray(\"NAB\", 1);\nNABId = NABArr[0].productId;\nlet WBAarr = await getProducts.getProductsArray(\"WBA\", 1);\nWBAId = WBAarr[0].productId;",
          "err": {
            "message": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves.",
            "estack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves.\n    at listOnTimeout (internal/timers.js:549:17)\n    at processTimers (internal/timers.js:492:7)",
            "diff": null
          },
          "uuid": "8e2079ca-ea8f-4ddc-bccf-2143b19dea8f",
          "parentUUID": "e85fb20c-bff2-4ca1-8139-182e96ce7875",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4b1bb684-4260-49dd-bf83-444e9cd73782",
          "title": "functional tests for get product details function",
          "fullFile": "/home/nikki/Development/regime_js/test/functional/test-get-productDetails-functional.js",
          "file": "/test/functional/test-get-productDetails-functional.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return the details of the specified product ID for ANZ",
              "fullTitle": "functional tests for get product details function should return the details of the specified product ID for ANZ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "res = await getProductDetails.getProductDetails(\"ANZ\", 1, ANZId);\nexpect(res).to.be.an(\"object\");\nexpect(res.data.productId).to.equal(ANZId);\nexpect(res).to.have.property(\"data\");",
              "err": {},
              "uuid": "335153f7-9d08-4f67-934c-dac27b147609",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should return the details of the specified product ID for CBA",
              "fullTitle": "functional tests for get product details function should return the details of the specified product ID for CBA",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "res = await getProductDetails.getProductDetails(\"CBA\", 1, CBAId);\nexpect(res).to.be.an(\"object\");\nexpect(res.data.productId).to.equal(CBAId);\nexpect(res).to.have.property(\"data\");",
              "err": {},
              "uuid": "e97e7d81-a3b3-4c66-9d4a-6c525ec31a23",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should return the details of the specified product ID for NAB",
              "fullTitle": "functional tests for get product details function should return the details of the specified product ID for NAB",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "res = await getProductDetails.getProductDetails(\"NAB\", 1, NABId);\nexpect(res).to.be.an(\"object\");\nexpect(res.data.productId).to.equal(NABId);\nexpect(res).to.have.property(\"data\");",
              "err": {},
              "uuid": "5d437a1f-ce06-4ffc-8782-e19e452aa243",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should return the details of the specified product ID for WBA",
              "fullTitle": "functional tests for get product details function should return the details of the specified product ID for WBA",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "res = await getProductDetails.getProductDetails(\"WBA\", 1, WBAId);\nexpect(res).to.be.an(\"object\");\nexpect(res.data.productId).to.equal(WBAId);\nexpect(res).to.have.property(\"data\");",
              "err": {},
              "uuid": "ba1fd49c-163a-42f3-a8db-b5d90a0d4970",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "335153f7-9d08-4f67-934c-dac27b147609",
            "e97e7d81-a3b3-4c66-9d4a-6c525ec31a23",
            "5d437a1f-ce06-4ffc-8782-e19e452aa243",
            "ba1fd49c-163a-42f3-a8db-b5d90a0d4970"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d7104e18-2fed-485c-9a47-9dd1d58d8a8a",
          "title": "functional tests for get products",
          "fullFile": "/home/nikki/Development/regime_js/test/functional/test-get-products-functional.js",
          "file": "/test/functional/test-get-products-functional.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "ef67bddf-1e03-4d82-b1cd-05cedf7c6266",
              "title": "functional tests for callGetProductsAPI() Function",
              "fullFile": "/home/nikki/Development/regime_js/test/functional/test-get-products-functional.js",
              "file": "/test/functional/test-get-products-functional.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should call and recieve a valid response from the CBA endpoint",
                  "fullTitle": "functional tests for get products functional tests for callGetProductsAPI() Function should call and recieve a valid response from the CBA endpoint",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "res = await getProducts.callGetProductsAPI(\"CBA\", 1);\nexpect(res).to.be.an(\"object\");\nexpect(res).to.have.property(\"data\");\nexpect(res.data).to.have.property(\"products\");",
                  "err": {},
                  "uuid": "d703c1a1-6ce7-4028-ab17-f60b86788445",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "should call and recieve a valid response from the NAB endpoint",
                  "fullTitle": "functional tests for get products functional tests for callGetProductsAPI() Function should call and recieve a valid response from the NAB endpoint",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "res = await getProducts.callGetProductsAPI(\"NAB\", 1);\nexpect(res).to.be.an(\"object\");\nexpect(res).to.have.property(\"data\");\nexpect(res.data).to.have.property(\"products\");",
                  "err": {},
                  "uuid": "ce5e4dda-1954-4f09-a0d0-355459018a02",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "should call and recieve a valid response from the ANZ endpoint",
                  "fullTitle": "functional tests for get products functional tests for callGetProductsAPI() Function should call and recieve a valid response from the ANZ endpoint",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "res = await getProducts.callGetProductsAPI(\"ANZ\", 1, {\n  \"product-category\": \"TRANS_AND_SAVINGS_ACCOUNTS\",\n});\nexpect(res).to.be.an(\"object\");\nexpect(res).to.have.property(\"data\");\nexpect(res.data).to.have.property(\"products\");",
                  "err": {},
                  "uuid": "f71d3868-a274-46fe-bf5d-1c0b461bab37",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "should call and recieve a valid response from the WBA endpoint",
                  "fullTitle": "functional tests for get products functional tests for callGetProductsAPI() Function should call and recieve a valid response from the WBA endpoint",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "res = await getProducts.callGetProductsAPI(\"WBA\", 1);\nexpect(res).to.be.an(\"object\");\nexpect(res).to.have.property(\"data\");\nexpect(res.data).to.have.property(\"products\");",
                  "err": {},
                  "uuid": "2478025b-ebb5-46f5-9c8c-1f9bab0da374",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "d703c1a1-6ce7-4028-ab17-f60b86788445",
                "ce5e4dda-1954-4f09-a0d0-355459018a02",
                "f71d3868-a274-46fe-bf5d-1c0b461bab37",
                "2478025b-ebb5-46f5-9c8c-1f9bab0da374"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "6.2.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": null,
      "version": "5.1.0"
    }
  }
}